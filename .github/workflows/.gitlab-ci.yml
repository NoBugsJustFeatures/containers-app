workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
    - when: never

stages:
  - checkout
  - build
  - backup
  - rollback
  - stop
  - restart

variables:
  GIT_REPO: "https://github.com/NoBugsJustFeatures/containers-app.git"
  COMPOSE_FILE: "docker-compose.yml"
  BACKUP_DIR: "$CI_PROJECT_DIR/backups"

default:
  before_script:
    - apt-get update -y && apt-get install -y git curl tar docker.io docker-compose-plugin
    - chown -R gitlab-runner:gitlab-runner "$CI_PROJECT_DIR" || true
    - chmod -R 775 "$CI_PROJECT_DIR" || true

checkout:
  stage: checkout
  script:
    - echo "Cloning repository..."
    - if [ ! -d .git ]; then
        git clone -b "https://github.com/NoBugsJustFeatures/containers-app.git" . ;
      else
        git fetch origin "${CI_COMMIT_REF_NAME}" &&
        git reset --hard "origin/${CI_COMMIT_REF_NAME}" ;
      fi
  tags:
    - docker
build_test:
  stage: build
  script:
    - echo "Building Docker images and running tests..."
    - docker compose -f "$COMPOSE_FILE" build
    - docker compose -f "$COMPOSE_FILE" up -d
    - docker compose ps
  tags:
    - docker

backup:
  stage: backup
  script:
    - mkdir -p "$BACKUP_DIR"
    - TIMESTAMP=$(date +%Y%m%d%H%M%S)
    - tar -czvf "$BACKUP_DIR/backup_${TIMESTAMP}.tar.gz" .
    - ls -1t "$BACKUP_DIR" | tail -n +4 | xargs -I {} rm -f "$BACKUP_DIR/{}"
  artifacts:
    paths:
      - backups/
  rules:
    - when: always      
    - when: manual      
  tags:
    - docker

rollback:
  stage: rollback
  script:
    - "echo 'Rolling back from archive: $ROLLBACK_VERSION'"
    - "tar -xzvf \"$BACKUP_DIR/$ROLLBACK_VERSION\" -C \"$CI_PROJECT_DIR\""
    - "docker compose -f \"$COMPOSE_FILE\" up -d --build"
  rules:
    - if: '$ROLLBACK_VERSION != ""'
      when: always
    - when: manual
  tags:
    - docker


stop:
  stage: stop
  script:
    - echo "Stopping services..."
    - docker compose -f "$COMPOSE_FILE" down --remove-orphans -v
  rules:
    - when: manual      # manual only
  tags:
    - docker

restart:
  stage: restart
  script:
    - echo "Restarting services..."
    - docker compose -f "$COMPOSE_FILE" down
    - docker compose -f "$COMPOSE_FILE" up -d
  rules:
    - when: manual      # manual only
  tags:
    - docker
